{
  "uid" : "4a6f8270456e01f1",
  "name" : "test_constellation_info[data1]",
  "fullName" : "TestCase.test_constellation_info.Test_Service_Info#test_constellation_info",
  "historyId" : "1c6097c37dd9566780c6e3c250c3175a",
  "time" : {
    "start" : 1630848150603,
    "stop" : 1630848150635,
    "duration" : 32
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 205801 == 0",
  "statusTrace" : "self = <TestCase.test_constellation_info.Test_Service_Info object at 0x000001AA71A928C8>\ndata = {'data': {'consName': '', 'type': 'today'}, 'detail': '异常测试：星座字段空', 'resp': {'error_code': 0, 'reason': 'Return Successd!', 'result': 'NAME ERROR!', 'resultcode': '201'}}\n\n    @pytest.mark.process\n    @pytest.mark.parametrize('data',testdata)\n    def test_constellation_info(self, data):\n        self.log.info('%s{%s}' % ((sys._getframe().f_code.co_name, '------开始星座运势查询接口测试-----')))\n        with allure.step('星座运势查询接口'):\n            msg = Api_News_Service().get_constellation(data['data']['consName'])\n        self.log.info('%s:%s' % ((sys._getframe().f_code.co_name, '获取请求结果：%s' % msg.json())))\n        # # 断言\n        assert data['resp']['result'] in (str)(msg.json()), '关键字\"{}\"不存在源码中!'.format(msg.json())\n        assert msg.json()['resultcode'] == data['resp']['resultcode']\n>       assert msg.json()['error_code'] == data['resp']['error_code']\nE       assert 205801 == 0\n\nTestCase\\test_constellation_info.py:29: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1630848150228,
      "stop" : 1630848150510,
      "duration" : 282
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1630848150510,
      "stop" : 1630848150510,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1630848150510,
      "stop" : 1630848150510,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "host",
    "time" : {
      "start" : 1630848150510,
      "stop" : 1630848150510,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 205801 == 0",
    "statusTrace" : "self = <TestCase.test_constellation_info.Test_Service_Info object at 0x000001AA71A928C8>\ndata = {'data': {'consName': '', 'type': 'today'}, 'detail': '异常测试：星座字段空', 'resp': {'error_code': 0, 'reason': 'Return Successd!', 'result': 'NAME ERROR!', 'resultcode': '201'}}\n\n    @pytest.mark.process\n    @pytest.mark.parametrize('data',testdata)\n    def test_constellation_info(self, data):\n        self.log.info('%s{%s}' % ((sys._getframe().f_code.co_name, '------开始星座运势查询接口测试-----')))\n        with allure.step('星座运势查询接口'):\n            msg = Api_News_Service().get_constellation(data['data']['consName'])\n        self.log.info('%s:%s' % ((sys._getframe().f_code.co_name, '获取请求结果：%s' % msg.json())))\n        # # 断言\n        assert data['resp']['result'] in (str)(msg.json()), '关键字\"{}\"不存在源码中!'.format(msg.json())\n        assert msg.json()['resultcode'] == data['resp']['resultcode']\n>       assert msg.json()['error_code'] == data['resp']['error_code']\nE       assert 205801 == 0\n\nTestCase\\test_constellation_info.py:29: AssertionError",
    "steps" : [ {
      "name" : "星座运势查询接口",
      "time" : {
        "start" : 1630848150603,
        "stop" : 1630848150635,
        "duration" : 32
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "6d22a25d2c92e23d",
      "name" : "log",
      "source" : "6d22a25d2c92e23d.txt",
      "type" : "text/plain",
      "size" : 434
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "聚合接口"
  }, {
    "name" : "tag",
    "value" : "process"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "suite",
    "value" : "test_constellation_info"
  }, {
    "name" : "subSuite",
    "value" : "Test_Service_Info"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9PO3806"
  }, {
    "name" : "thread",
    "value" : "8316-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.test_constellation_info"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'detail': '异常测试：星座字段空', 'data': {'consName': '', 'type': 'today'}, 'resp': {'resultcode': '201', 'reason': 'Return Successd!', 'result': 'NAME ERROR!', 'error_code': 0}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "process" ]
  },
  "source" : "4a6f8270456e01f1.json",
  "parameterValues" : [ "{'detail': '异常测试：星座字段空', 'data': {'consName': '', 'type': 'today'}, 'resp': {'resultcode': '201', 'reason': 'Return Successd!', 'result': 'NAME ERROR!', 'error_code': 0}}" ]
}