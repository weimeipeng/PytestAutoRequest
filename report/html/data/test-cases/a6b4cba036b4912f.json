{
  "uid" : "a6b4cba036b4912f",
  "name" : "test_phone[data2]",
  "fullName" : "TestCase.test_get_phone.Test_Info#test_phone",
  "historyId" : "e36baaa807cdc6493f8b6aa35a763eea",
  "time" : {
    "start" : 1630848217370,
    "stop" : 1630848217401,
    "duration" : 31
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'resultcode1'",
  "statusTrace" : "self = <TestCase.test_get_phone.Test_Info object at 0x000001FD78420848>\ndata = {'data': {'phone': '', 'type': ''}, 'detail': '手机号为空：错误提示', 'resp': {'error_code': 201101, 'reason': 'The phone number can not be empty!', 'result': None, 'resultcode': '201'}}\n\n    @pytest.mark.process\n    @pytest.mark.parametrize('data', testdata)\n    def test_phone(self, data):\n        self.log.info('%s{%s}' % ((sys._getframe().f_code.co_name, '------开始手机号码归属地查询接口测试-----')))\n        with allure.step('手机号查询接口'):\n            msg = Api_News_Service().get_phone(data['data']['phone'],data['data']['type'])\n        self.log.info('%s:%s' % ((sys._getframe().f_code.co_name, '获取请求结果：%s' % msg.json())))\n        # # 断言\n>       assert msg.json()[\"resultcode\"] == data['resp']['resultcode1']\nE       KeyError: 'resultcode1'\n\nTestCase\\test_get_phone.py:28: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1630848216964,
      "stop" : 1630848216964,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "host",
    "time" : {
      "start" : 1630848216964,
      "stop" : 1630848216964,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1630848216964,
      "stop" : 1630848216964,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1630848216683,
      "stop" : 1630848216964,
      "duration" : 281
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'resultcode1'",
    "statusTrace" : "self = <TestCase.test_get_phone.Test_Info object at 0x000001FD78420848>\ndata = {'data': {'phone': '', 'type': ''}, 'detail': '手机号为空：错误提示', 'resp': {'error_code': 201101, 'reason': 'The phone number can not be empty!', 'result': None, 'resultcode': '201'}}\n\n    @pytest.mark.process\n    @pytest.mark.parametrize('data', testdata)\n    def test_phone(self, data):\n        self.log.info('%s{%s}' % ((sys._getframe().f_code.co_name, '------开始手机号码归属地查询接口测试-----')))\n        with allure.step('手机号查询接口'):\n            msg = Api_News_Service().get_phone(data['data']['phone'],data['data']['type'])\n        self.log.info('%s:%s' % ((sys._getframe().f_code.co_name, '获取请求结果：%s' % msg.json())))\n        # # 断言\n>       assert msg.json()[\"resultcode\"] == data['resp']['resultcode1']\nE       KeyError: 'resultcode1'\n\nTestCase\\test_get_phone.py:28: KeyError",
    "steps" : [ {
      "name" : "手机号查询接口",
      "time" : {
        "start" : 1630848217370,
        "stop" : 1630848217401,
        "duration" : 31
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "dedfe01aee845b59",
      "name" : "log",
      "source" : "dedfe01aee845b59.txt",
      "type" : "text/plain",
      "size" : 426
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "聚合接口"
  }, {
    "name" : "tag",
    "value" : "process"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "suite",
    "value" : "test_get_phone"
  }, {
    "name" : "subSuite",
    "value" : "Test_Info"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9PO3806"
  }, {
    "name" : "thread",
    "value" : "312-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.test_get_phone"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'detail': '手机号为空：错误提示', 'data': {'phone': '', 'type': ''}, 'resp': {'resultcode': '201', 'reason': 'The phone number can not be empty!', 'result': None, 'error_code': 201101}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "process" ]
  },
  "source" : "a6b4cba036b4912f.json",
  "parameterValues" : [ "{'detail': '手机号为空：错误提示', 'data': {'phone': '', 'type': ''}, 'resp': {'resultcode': '201', 'reason': 'The phone number can not be empty!', 'result': None, 'error_code': 201101}}" ]
}